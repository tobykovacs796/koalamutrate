#!/bin/bash

#PBS -P RDS-FSC-Nocticola-RW
#PBS -N log1.vcf2smc.SEQLD_NNSW
#PBS -l select=1:ncpus=1:mem=2GB
#PBS -l walltime=1:00:00
#PBS -m abe
#PBS -M tkov3622@hpc.sydney.edu.au
#PBS -q defaultQ
#PBS -J 1-603

module load python/3.9.15 mpfr/4.0.2 gsl/1.16 gcc/9.1.0

cd /scratch/RDS-FSC-awggdata-RW/koala_dnazoo/wgs/SMCpp/full/smc/estimate/SEQLD_NNSW/data

# Set up temporary directory
export TMPDIR=/scratch/RDS-FSC-awggdata-RW/koala_dnazoo/wgs/SMCpp/smc/tmp/job_${PBS_JOBID}
mkdir -p $TMPDIR

## Allocate a contig to each array element, there are 603 contigs
params=$(sed "${PBS_ARRAY_INDEX}q;d" /scratch/RDS-FSC-awggdata-RW/koala_dnazoo/wgs/SMCpp/full/vcf/koala.50k_noX.bed)
param_array=( $params )

# Define the path to your list of individuals in the pop
input_file='/scratch/RDS-FSC-awggdata-RW/koala_dnazoo/wgs/SMCpp/full/pop_lists/SEQLD_NNSW.txt'

# Read the file line by line and format as a comma-separated list
SEQLD_NNSW=$(while IFS= read -r line; do echo -n "$line,"; done < "$input_file")

# Remove the trailing comma
SEQLD_NNSW=${SEQLD_NNSW%,}

if [ ! -f "/scratch/RDS-FSC-awggdata-RW/koala_dnazoo/wgs/SMCpp/full/pop_lists/SEQLD_NNSW_dls.txt" ]; then
    echo "Error: Sample list file not found!"
    exit 1
fi

mapfile -t sample_names < '/scratch/RDS-FSC-awggdata-RW/koala_dnazoo/wgs/SMCpp/full/pop_lists/SEQLD_NNSW_dls.txt'

#if [ ! -d "smc-env" ]; then
#    cp -R ../smc-env smc-env
#fi
source ../../smc-env/bin/activate

# Loop over the sample names and execute smc++ command for each
# -c 50000 option to filter out RoH removed for now
for sample_name in "${sample_names[@]}"; do
    smc++ vcf2smc  -c 50000 -d "$sample_name" "$sample_name" /scratch/RDS-FSC-awggdata-RW/koala_dnazoo/wgs/SMCpp/full/vcf/kjg_474_noX_50k_bi.vcf.gz "SEQLD_NNSW_${sample_name}_${param_array[0]}.smc.gz" "${param_array[0]}" "SEQLD_NNSW:$SEQLD_NNSW"
done